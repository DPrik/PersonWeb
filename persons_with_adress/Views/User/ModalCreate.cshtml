@model BLL.DTO.PersonDTO

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PersonDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @for (int i = 0; i < 3; i++)
            {
                <div class="form-group">
                    <label class="control-label col-md-2">Phone @(i + 1)</label>
                    @Html.HiddenFor(Model => Model.Phones[i].Id)
                    @Html.EditorFor(Model => Model.Phones[i].Number)
                    <label class="">Type</label>
                    @Html.EditorFor(Model => Model.Phones[i].Type)
                    @Html.HiddenFor(Model => Model.Phones[i].PersonId)
                </div>

            }

            <div id="map" style="width:500px;height:380px;"></div>
            <script async defer
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCj9wjc6qirHgL3ktrDuah1dO1-5WXEI_M&callback=initMap">
            </script>
        </div>

        @*<div class="form-group">

            @for (int i = 0; i < 3; i++)
            {
                <div class="form-group">
                    <label class="control-label col-md-2">Adress @(i + 1)</label>
                    @Html.HiddenFor(Model => Model.Adress[i].Id)
                    @Html.EditorFor(Model => Model.Adress[i].Street)
                    <label class="">Type</label>
                    @Html.EditorFor(Model => Model.Phones[i].Type)
                    @Html.HiddenFor(Model => Model.Phones[i].PersonId)
                </div>
            }
        </div>*@

        <div class="form-group">
            <input id="pac-input" class="controls" type="text"
                   placeholder="Enter a location">
            
            <div id="googleMap" style="width:500px;height:380px;"></div>

         

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

